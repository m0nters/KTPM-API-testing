name: deploy

on:
    workflow_run:
        workflows: ["unit test"]
        types:
            - completed
        branches: [main, feature/*, develop]
    # Keep manual triggers for testing
    workflow_dispatch:
    push:
        branches: [main, feature/*, develop]
    pull_request:
        branches: [main, develop]

concurrency: production_environment

jobs:
    deploy:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                sprint: ["5-with-bugs"]
        env:
            NODE_VERSION: ${{ matrix.sprint == '5' && '22.2.0' || '16' }}
            SECRET_GOOGLE_ID: ${{ matrix.sprint == '5' && secrets.SECRET_GOOGLE_ID || '' }}
            SECRET_GOOGLE_SECRET: ${{ matrix.sprint == '5' && secrets.SECRET_GOOGLE_SECRET || '' }}
            SECRET_GITHUB_ID: ${{ matrix.sprint == '5' && secrets.SECRET_GITHUB_ID || '' }}
            SECRET_GITHUB_SECRET: ${{ matrix.sprint == '5' && secrets.SECRET_GITHUB_SECRET || '' }}
        steps:
            - uses: actions/checkout@v4
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.3"
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
            #      - name: Install Deployer globally
            #        run: |
            #          composer global require deployer/deployer:6.9.0
            #          echo "${{ runner.tool_cache }}/composer/vendor/bin" >> $GITHUB_PATH

            - name: Install (dev) Dependencies
              run: |
                  cd sprint${{ matrix.sprint }}/API
                  composer update --no-progress --prefer-dist
            - name: Install Dependencies
              run: |
                  cd sprint${{ matrix.sprint }}/API
                  composer update --no-dev --prefer-dist --optimize-autoloader
                  composer dump-autoload -o
            - name: Make envfile
              uses: danielr1996/envsubst-action@1.0.0
              env:
                  SECRET_DB: ${{ secrets.SECRET_DB }}
                  SECRET_DB_USER: ${{ secrets.SECRET_DB_USER }}
                  SECRET_DB_PASS: ${{ secrets.SECRET_DB_PASS }}
                  SECRET_GOOGLE_ID: ${{ env.SECRET_GOOGLE_ID }}
                  SECRET_GOOGLE_SECRET: ${{ env.SECRET_GOOGLE_SECRET }}
                  SECRET_GITHUB_ID: ${{ env.SECRET_GITHUB_ID }}
                  SECRET_GITHUB_SECRET: ${{ env.SECRET_GITHUB_SECRET }}
              with:
                  input: sprint${{ matrix.sprint }}/API/.env_template
                  output: sprint${{ matrix.sprint }}/API/.env

            - name: Deploy to VPS via SSH
              uses: appleboy/ssh-action@v1.0.0
              continue-on-error: true
              with:
                  host: ${{ secrets.VPS_HOST || 'localhost' }}
                  username: ${{ secrets.VPS_USER || 'github-actions' }}
                  key: ${{ secrets.VPS_PRIVATE_KEY || 'dummy-key' }}
                  port: 22
                  script: |
                      echo "This would normally deploy to VPS"
                      echo "Simulating deployment process..."

            - name: Deployment Status
              run: |
                  echo "âœ… Deployment simulation completed"
                  echo "In a real scenario, this would deploy to your VPS"
